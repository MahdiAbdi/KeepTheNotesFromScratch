{"version":3,"sources":["firebase.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","provider","GoogleAuthProvider","db","firestore","withStyles","theme","createStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","textField","marginTop","width","height","props","_useState","useState","_useState2","Object","slicedToArray","docId","setDocId","_useState3","_useState4","note","setNote","_useState5","_useState6","user","setUser","_useState7","_useState8","open","setOpen","_useState9","_useState10","anchorEl","setAnchorEl","_useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","parse","error","item","setInnerValue","value","setItem","stringify","e","console","log","useLocalStorage","_useLocalStorage2","isDark","setDark","useEffect","onAuthStateChanged","collection","where","email","onSnapshot","snapshot","docChanges","forEach","change","type","doc","id","data","content","classes","isSignedIn","Boolean","createMuiTheme","palette","typography","fontFamily","useNextVariants","suppressDeprecationWarnings","react_default","a","createElement","MuiThemeProvider_default","className","AppBar_default","position","color","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","gutterBottom","Switch_default","checked","onChange","onClick","currentTarget","style","display","flexDirection","justifyContent","alignItems","displayName","Avatar_default","alt","src","photoURL","avatar","aria-owns","undefined","aria-haspopup","signInWithPopup","then","result","catch","AccountCircle_default","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","signOut","TextField_default","multiline","rows","update","target","add","author","margin","backgroundColor","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.075ffc92.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB3GYcRcn40zuiUOL9oEiXC2pE7RWBPX8U\",\r\n    authDomain: \"keepthenotes-bf133.firebaseapp.com\",\r\n    databaseURL: \"https://keepthenotes-bf133.firebaseio.com\",\r\n    projectId: \"keepthenotes-bf133\",\r\n    storageBucket: \"keepthenotes-bf133.appspot.com\",\r\n    messagingSenderId: \"682012368542\"\r\n  };\r\n  \r\n  firebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const db = firebase.firestore();","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport createStyles from \"@material-ui/core/styles/createStyles\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport \"./fonts/fira_code.css\";\r\nimport { auth, db, provider } from \"./firebase\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {useLocalStorage} from \"./hooks/useLocalStorage\";\r\n\r\nfunction App(props) {\r\n  // const isDarkFromLocalStorage = localStorage.getItem(\"isDark\");\r\n  // console.log(\"isDarkFromLocalStorage : \", isDarkFromLocalStorage);\r\n  const [docId, setDocId] = useState(0);\r\n  const [note, setNote] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isDark, setDark] = useLocalStorage(false);\r\n\r\n  // useEffect(\r\n  //   () => {\r\n  //     console.log(\"EFEEEEEEEEEEEECT\", isDark);\r\n  //     localStorage.setItem(\"isDark\", isDark.toString());\r\n  //   },\r\n  //   [isDark]\r\n  // );\r\n\r\n  useEffect(\r\n    () => {\r\n      auth.onAuthStateChanged(user => {\r\n        if (user) {\r\n          setUser(user);\r\n          db.collection(\"notes\")\r\n            .where(\"author\", \"==\", user.email)\r\n            .onSnapshot(snapshot => {\r\n              let changes = snapshot.docChanges();\r\n              changes.forEach(change => {\r\n                if (change.type === \"added\") {\r\n                  setDocId(change.doc.id);\r\n                } else if (change.type === \"removed\") {\r\n                  setNote(\"\");\r\n                }\r\n                setNote(change.doc.data().content);\r\n              });\r\n            });\r\n        } else {\r\n          setNote(\"\");\r\n          setDocId(null);\r\n          setUser(null);\r\n        }\r\n      });\r\n    },\r\n    [user]\r\n  );\r\n\r\n  const autoSave = e => {\r\n    if (docId) {\r\n      db.collection(\"notes\")\r\n        .doc(docId)\r\n        .update({ content: e.target.value });\r\n    } else {\r\n      db.collection(\"notes\").add({\r\n        author: user.email,\r\n        content: e.target.value\r\n      });\r\n    }\r\n  };\r\n\r\n  const login = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        setOpen(false);\r\n      })\r\n      .catch(error => {});\r\n  };\r\n\r\n  const { classes } = props;\r\n  const isSignedIn = Boolean(user);\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: isDark ? \"dark\" : \"light\"\r\n    },\r\n    typography: {\r\n      fontFamily: \"Fira Code\",\r\n      useNextVariants: true,\r\n      suppressDeprecationWarnings: true\r\n    }\r\n  });\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"primary\"\r\n              aria-label=\"Menu\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              className={classes.grow}\r\n            >\r\n              ToNote\r\n            </Typography>\r\n            <Switch\r\n              checked={isDark}\r\n              onChange={() => setDark(!isDark)}\r\n              value=\"isDark\"\r\n            />\r\n            <div>\r\n              {isSignedIn ? (\r\n                <div\r\n                  onClick={e => {\r\n                    setOpen(true);\r\n                    setAnchorEl(e.currentTarget);\r\n                  }}\r\n                  style={{\r\n                    width: \"110%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    style={{ display: \"inline-block\" }}\r\n                    variant=\"body2\"\r\n                    className={classes.grow}\r\n                  >\r\n                    {user.displayName}\r\n                  </Typography>\r\n                  <Avatar\r\n                    style={{ display: \"inline-block\" }}\r\n                    alt=\"Remy Sharp\"\r\n                    src={user.photoURL}\r\n                    className={classes.avatar}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Typography\r\n                    color=\"primary\"\r\n                    style={{ display: \"inline-block\" }}\r\n                    variant=\"body2\"\r\n                    className={classes.grow}\r\n                  >\r\n                    Login -->\r\n                  </Typography>\r\n                  <IconButton\r\n                    aria-owns={open ? \"menu-appbar\" : undefined}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={login}\r\n                    color=\"primary\"\r\n                  >\r\n                    <AccountCircle />\r\n                  </IconButton>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {isSignedIn && (\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\"\r\n                }}\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n              >\r\n                <MenuItem onClick={() => auth.signOut()}>SignOut</MenuItem>\r\n              </Menu>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {isSignedIn ? (\r\n          <TextField\r\n            id=\"outlined-multiline-flexible\"\r\n            multiline\r\n            rows={40}\r\n            value={note}\r\n            onChange={autoSave}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            style={{ backgroundColor: isDark ? \"#1a2837\" : \"#FFF\" }}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst styles = theme =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    grow: {\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20\r\n    },\r\n    textField: {\r\n      marginTop: 0,\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    }\r\n  });\r\n\r\nexport default withStyles(styles)(App);\r\n","import {useState} from 'react';\r\nexport function useLocalStorage(key, initialValue) {\r\n    // The initialValue arg is only used if there is nothing in localStorage ...\r\n    // ... otherwise we use the value in localStorage so state persist through a page refresh.\r\n    // Pass a function to useState so localStorage lookup only happens once.\r\n    // Wrap in try/catch in case localStorage is unavailable.\r\n    const [item, setInnerValue] = useState(() => {\r\n        try {\r\n            return window.localStorage.getItem(key)\r\n                ? JSON.parse(window.localStorage.getItem(key))\r\n                : initialValue;\r\n        } catch (error) {\r\n            // Return default value if JSON parsing fails\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = value => {\r\n        try {\r\n            setInnerValue(value);\r\n            window.localStorage.setItem(key, JSON.stringify(value));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    // Alternatively we could update localStorage inside useEffect ...\r\n    // ... but this would run every render and it really only needs ...\r\n    // ... to happen when the returned setValue function is called.\r\n    /*\r\n    useEffect(() => {\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    });\r\n    */\r\n\r\n    return [item, setValue];\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}